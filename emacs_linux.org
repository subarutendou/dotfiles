#+title Emacs settings
#+PROPERTY: header-args:emacs-lisp :tangle ~/.emacs.d/init.el :mkdirp yes

* pre-load
** Minimum
#+begin_src emacs-lisp :tangle ~/.emacs.d/early-init.el
  (setq custom-file "~/.emacs.d/.emacs.custom.el")

  (setq inhibit-startup-message t
    inhibit-startup-echo-area-message t)
  (scroll-bar-mode -1)
  (tool-bar-mode -1)
  (tooltip-mode -1)
  (menu-bar-mode -1)
  (set-fringe-mode 10)
  (setq visible-bell t)
  (setq use-dialog-box nil)
  (setq initial-scratch-message nil)
  (save-place-mode 1)
  (show-paren-mode 1)
  (setq-default x-select-enable-primary t)
  (setq-default frame-resize-pixelwise t)
  (add-hook 'emacs-startup-hook 'toggle-frame-maximized)
  (set-language-environment "UTF-8")
  (set-default-coding-systems 'utf-8)
  (defalias 'yes-or-no-p 'y-or-n-p)
  (global-set-key (kbd "<escape>") 'keyboard-escape-quit)
  (setq native-comp-async-report-warnings-errors nil)
  (column-number-mode 1)
  (global-auto-revert-mode 1)
  (add-hook 'dired-mode-hook 'auto-revert-mode)
  (when (version<= "26.0.50" emacs-version )
    (global-display-line-numbers-mode))
  (setq display-line-numbers-type 'relative)
  (defvar file-name-handler-alist-old file-name-handler-alist)
  (setq file-name-handler-alist nil
    gc-cons-threshold most-positive-fixnum)
  (add-hook 'after-init-hook
        (lambda ()
          (setq file-name-handler-alist file-name-handler-alist-old)
          (setq gc-cons-threashold (* 2 1000 1000)))
        t)
  (dolist (mode ' (org-mode-hook
           term-mode-hook
           shell-mode-hook
           eshell-mode-hook
           vterm-mode-hook))
    (add-hook mode (lambda () (display-line-numbers-mode 0))))
  (setq browse-url-browser-function 'browse-url-default-windows-browser)
  (when (fboundp 'electric-pair-mode)
    (electric-pair-mode t))
  (add-to-list 'default-frame-alist '(font . "Iosevka-14"))
  (setq vc-make-backup-files t)
  (setq
   backup-by-copying t
   backup-directory-alist
   '(("." . ".saves"))
   delete-old-versions t
   kept-new-versions 6
   kept-old-versions 2
   version-control t)
#+end_src

* basic
** use-package
#+begin_src emacs-lisp
  (require 'package)
  (add-to-list 'package-archives
	       '("melpa-stable" . "https://stable.melpa.org/packages/") t)
  (package-initialize)
  (unless package-archive-contents
    (package-refresh-contents))
  (unless (package-installed-p 'use-package)
    (package-install 'use-package))
  (require 'use-package)
  (setq use-package-always-ensure t)
#+end_src

** package
*** melpa emacs
#+begin_src emacs-lisp
  (use-package ido
    :config
    (ido-mode 1)
    (setq ido-everywhere t))

  (use-package ido-completing-read+
    :config
    (ido-ubiquitous-mode 1))

  (use-package amx
    :config
    (amx-mode)
    ;; This is your old M-x.
    (global-set-key (kbd "C-c C-c M-x") 'execute-extended-command))

  (use-package diminish)
  (use-package flx)
  (use-package swift-mode)
  (use-package lua-mode)
  (use-package python-mode)
  (use-package rust-mode)
  (use-package json-mode)
  (use-package yaml-mode)
  (use-package auto-complete
               :diminish auto-complete-mode
               :config
               (ac-config-default))

  (use-package rainbow-delimiters
               :hook (prog-mode . rainbow-delimiters-mode))

  ;;(use-package magit
  ;;             :custom
  ;;             (magit-display-buffer-function #'magit-display-buffer-same-window-except-diff-vl))

  (use-package avy
    :ensure t
    :bind
    ("M-s" . avy-goto-char))
#+end_src

** settings
#+begin_src emacs-lisp
  (blink-cursor-mode 0)
  (require 'recentf)
  (recentf-mode t)
  (setq recentf-max-saved-items 50)
  (setq-default indent-tabs-mode nil)
  (setq-default c-basic-offset 4)

  (use-package savehist
      :config
      (setq history-length 25)
      (savehist-mode 1)
      (setq savehist-save-minibuffer-history t)
      (add-hook 'after-init-hook #'savehist-mode))

  (load-file custom-file)
#+end_src

** auto tangle
#+begin_src emacs-lisp
  (defun efs/org-babel-tangle-config()
    (when (string-equal (buffer-file-name)
                        (expand-file-name "~/.emacs.d/emacs_linux_desktop.org"))
      (let ((org-confirm-babel-evaluate nil))
        (org-babel-tangle))))

  (add-hook 'org-mode-hook (lambda () (add-hook 'after-save-hook #'efs/org-babel-tangle-config)))
#+end_src
* system configuration
** bash
#+begin_src conf :tangle ~/.bashrc
  export EDITOR=VISUAL
  export VISUAL="emacs"
  export GTK_THEME=Adwaita:dark
  export GTK2_RC_FILES=/usr/share/themes/Adwaita-dark/gtk-2.0/gtkrc
  export QT_STYLE_OVERRIDE=adwaita-dark
  export PATH=~/dow/swift-5.9.2-RELEASE-ubuntu18.04/usr/bin:"${PATH}"

  function parse_git_dirty {
      STATUS="$(git status 2> /dev/null)"
      if [[ $? -ne 0 ]]; then printf ""; return; else printf " ["; fi
      if echo ${STATUS} | grep -c "renamed:"         &> /dev/null; then printf " >"; else printf ""; fi
      if echo ${STATUS} | grep -c "brach is ahead:"         &> /dev/null; then printf " !"; else printf ""; fi
      if echo ${STATUS} | grep -c "new file:"         &> /dev/null; then printf " +"; else printf ""; fi
      if echo ${STATUS} | grep -c "Untracked fiels:"         &> /dev/null; then printf " ?"; else printf ""; fi
      if echo ${STATUS} | grep -c "modified:"         &> /dev/null; then printf " *"; else printf ""; fi
      if echo ${STATUS} | grep -c "deleted:"         &> /dev/null; then printf " -"; else printf ""; fi
      printf " ]"
  }

  parse_git_brach() {
      git rev-parse --abbrev-ref HEAD 2> /dev/null
  }

  PS1="\$(parse_git_brach)\$(parse_git_dirty) \w/\n > "

  #update
  alias update='sudo pacman -Syu'
  alias aur='sudo pacman -Sau'

  # Alias
  alias ls='ls -CF --color=auto'
  alias la='ls -A'
  alias ll='ls -alF'
  alias suspend='sudo systemctl suspend'
  alias gs='git status'
  alias grep='grep --color=auto'
  alias rm='rm -i'
  alias mv='mv -i'
  alias tmux='tmux -u'
  # alias ll='ls -lah'
  # alias la='ls -a'
  alias gpgl='gpg --list-secret-keys --keyid-format LONG'
  alias cl='sudo pacman -Rns $(pacman -Qdtq)'
  alias cpu='sudo auto-cpufreq --stats'
  alias te='tar -xvzf'
  alias install_grub='sudo grub-install --target=x86_64-efi --efi-directory=uefi --bootloader-id=grub'
  alias vim='nvim'

  co() {
  gcc "$1" -o ../Debug/"$2"
  }

  dlweb() {
  wget --recursive --no-clobber --page-requisites --html-extension --convert-links --domains "$1" --no-parent "$2"	 
  }
#+end_src

** bash_profile
#+begin_src conf :tangle ~/.bash_profile
  #
  # ~/.bash_profile
  #

  [[ -f ~/.bashrc ]] && . ~/.bashrc

  PATH=$PATH:~/.local/bin

  # Text color variables
  txtund=$(tput sgr 0 1)          # Underline
  txtbld=$(tput bold)             # Bold
  bldred=${txtbld}$(tput setaf 1) #  red
  bldblu=${txtbld}$(tput setaf 4) #  blue
  bldwht=${txtbld}$(tput setaf 7) #  white
  txtrst=$(tput sgr0)             # Reset
  info=${bldwht}*${txtrst}        # Feedback
  pass=${bldblu}*${txtrst}
  warn=${bldred}*${txtrst}
  ques=${bldblu}?${txtrst}

  if [ -z "${DISPLAY}" ] && [ "${XDG_VTNR}" -eq 1 ]; then
     exec wrappedhl
  fi

  # opam configuration
  #test -r /home/tendou/.opam/opam-init/init.sh && . /home/tendou/.opam/opam-init/init.sh > /dev/null 2> /dev/null || true

  #eval $(opam env --switch=default)

  . "$HOME/.cargo/env"
#+end_src

** hyprland
#+begin_src conf :tangle ~/.config/hypr/hyprland.conf
  ################
  ### MONITORS ###
  ################

  # See https://wiki.hyprland.org/Configuring/Monitors/
  #monitor=,preferred,auto,auto
  monitor =,1920x1080@120,auto,1
  #monitor =,3840x2160@120,auto,1

  ###################
  ### MY PROGRAMS ###
  ###################

  # See https://wiki.hyprland.org/Configuring/Keywords/

  # Set programs that you use
  $terminal = st
  $menu = wofi --show=run
  $browser = zen

  #################
  ### AUTOSTART ###
  #################

  # Autostart necessary processes (like notifications daemons, status bars, etc.)
  # Or execute your favorite apps at launch like this:

  # exec-once = $terminal
  # exec-once = nm-applet &
  # exec-once = waybar & hyprpaper & firefox
  exec-once = emacs
  exec-once = pcloud
  exec-once = hyprpaper

  ############################
  ### ENVIRONMENT VARIABLES ###
  #############################

  # See https://wiki.hyprland.org/Configuring/Environment-variables/

  env = XCURSOR_SIZE,24
  env = HYPRCURSOR_SIZE,24
  env = LIBVA_DRIVER_NAME,nvidia
  env = XDG_SESSION_TYPE,wayland
  env = GBM_BACKEND,nvidia-drm
  env = __GLX_VENDOR-LIBRARY_NAME,nvidia

  cursor {
      no_warps = true
      no_hardware_cursors = true
  }


  #####################
  ### LOOK AND FEEL ###
  #####################

  # Refer to https://wiki.hyprland.org/Configuring/Variables/

  # https://wiki.hyprland.org/Configuring/Variables/#general
  general {
      gaps_in = 0
      gaps_out = 0

      border_size = 1

      # https://wiki.hyprland.org/Configuring/Variables/#variable-types for info about colors
      col.active_border = rgba(33ccffee) rgba(00ff99ee) 45deg
      col.inactive_border = rgba(595959aa)

      # Set to true enable resizing windows by clicking and dragging on borders and gaps
      resize_on_border = false

      # Please see https://wiki.hyprland.org/Configuring/Tearing/ before you turn this on
      allow_tearing = false

      layout = dwindle
  }

  # https://wiki.hyprland.org/Configuring/Variables/#decoration
  decoration {
      rounding = 0

      # Change transparency of focused and unfocused windows
      active_opacity = 1.0
      inactive_opacity = 1.0

      drop_shadow = true
      shadow_range = 4
      shadow_render_power = 3
      col.shadow = rgba(1a1a1aee)

      # https://wiki.hyprland.org/Configuring/Variables/#blur
      blur {
          enabled = true
          size = 3
          passes = 1

          vibrancy = 0.1696
      }
  }

  # https://wiki.hyprland.org/Configuring/Variables/#animations
  animations {
      enabled = true

      # Default animations, see https://wiki.hyprland.org/Configuring/Animations/ for more

      bezier = myBezier, 0.05, 0.9, 0.1, 1.05

      animation = windows, 1, 7, myBezier
      animation = windowsOut, 1, 7, default, popin 80%
      animation = border, 1, 10, default
      animation = borderangle, 1, 8, default
      animation = fade, 1, 7, default
      animation = workspaces, 1, 6, default
  }

  # See https://wiki.hyprland.org/Configuring/Dwindle-Layout/ for more
  dwindle {
      pseudotile = true # Master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below
      preserve_split = true # You probably want this
  }

  # See https://wiki.hyprland.org/Configuring/Master-Layout/ for more
  master {
      new_status = master
  }

  # https://wiki.hyprland.org/Configuring/Variables/#misc
  misc {
      force_default_wallpaper = -1 # Set to 0 or 1 to disable the anime mascot wallpapers
      disable_hyprland_logo = false # If true disables the random hyprland logo / anime girl background. :(
  }


  #############
  ### INPUT ###
  #############

  # https://wiki.hyprland.org/Configuring/Variables/#input
  input {
      kb_layout = us
      kb_variant =
      kb_model =
      kb_options =
      kb_rules =

      follow_mouse = 0

      sensitivity = 0 # -1.0 - 1.0, 0 means no modification.

      natural_scroll = true

      touchpad {
          natural_scroll = false
      }
  }

  # https://wiki.hyprland.org/Configuring/Variables/#gestures
  gestures {
      workspace_swipe = false
  }

  # Example per-device config
  # See https://wiki.hyprland.org/Configuring/Keywords/#per-device-input-configs for more
  device {
      name = epic-mouse-v1
      sensitivity = -0.5
  }


  ###################
  ### KEYBINDINGS ###
  ###################

  # See https://wiki.hyprland.org/Configuring/Keywords/
  $mainMod = SUPER # Sets "Windows" key as main modifier

  # Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
  bind = $mainMod, X, exec, $terminal
  bind = $mainMod, Q, killactive,
  bind = $mainMod, B, exec, $browser
  bind = $mainMod, V, togglefloating,
  bind = $mainMod, R, exec, $menu
  bind = $mainMod, B, exec, $browser
  bind = $mainMod, U, togglesplit, # dwindle

  # Move focus with mainMod + arrow keys
  bind = $mainMod, H, movefocus, l
  bind = $mainMod, L, movefocus, r
  bind = $mainMod, K, movefocus, u
  bind = $mainMod, J, movefocus, d

  # Switch workspaces with mainMod + [0-9]
  bind = $mainMod, 1, workspace, 1
  bind = $mainMod, 2, workspace, 2
  bind = $mainMod, 3, workspace, 3
  bind = $mainMod, 4, workspace, 4
  bind = $mainMod, 5, workspace, 5
  bind = $mainMod, 6, workspace, 6
  bind = $mainMod, 7, workspace, 7
  bind = $mainMod, 8, workspace, 8
  bind = $mainMod, 9, workspace, 9
  bind = $mainMod, 0, workspace, 10

  # Move active window to a workspace with mainMod + SHIFT + [0-9]
  bind = $mainMod SHIFT, 1, movetoworkspace, 1
  bind = $mainMod SHIFT, 2, movetoworkspace, 2
  bind = $mainMod SHIFT, 3, movetoworkspace, 3
  bind = $mainMod SHIFT, 4, movetoworkspace, 4
  bind = $mainMod SHIFT, 5, movetoworkspace, 5
  bind = $mainMod SHIFT, 6, movetoworkspace, 6
  bind = $mainMod SHIFT, 7, movetoworkspace, 7
  bind = $mainMod SHIFT, 8, movetoworkspace, 8
  bind = $mainMod SHIFT, 9, movetoworkspace, 9
  bind = $mainMod SHIFT, 0, movetoworkspace, 10

  # Example special workspace (scratchpad)
  bind = $mainMod, S, togglespecialworkspace, magic
  bind = $mainMod SHIFT, S, movetoworkspace, special:magic

  # Scroll through existing workspaces with mainMod + scroll
  bind = $mainMod, mouse_down, workspace, e+1
  bind = $mainMod, mouse_up, workspace, e-1

  # Move/resize windows with mainMod + LMB/RMB and dragging
  bindm = $mainMod, mouse:272, movewindow
  bindm = $mainMod, mouse:273, resizewindow

  # Laptop multimedia keys for volume and LCD brightness
  bindel = ,XF86AudioRaiseVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+
  bindel = ,XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
  bindel = ,XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
  bindel = ,XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
  bindel = ,XF86MonBrightnessUp, exec, brightnessctl s 10%+
  bindel = ,XF86MonBrightnessDown, exec, brightnessctl s 10%-

  # Requires playerctl
  bindl = , XF86AudioNext, exec, playerctl next
  bindl = , XF86AudioPause, exec, playerctl play-pause
  bindl = , XF86AudioPlay, exec, playerctl play-pause
  bindl = , XF86AudioPrev, exec, playerctl previous

  ##############################
  ### WINDOWS AND WORKSPACES ###
  ##############################

  # See https://wiki.hyprland.org/Configuring/Window-Rules/ for more
  # See https://wiki.hyprland.org/Configuring/Workspace-Rules/ for workspace rules

  # Example windowrule v1
  # windowrule = float, ^(kitty)$

  # Example windowrule v2
  # windowrulev2 = float,class:^(kitty)$,title:^(kitty)$

  # Ignore maximize requests from apps. You'll probably like this.
  windowrulev2 = suppressevent maximize, class:.*

  # Fix some dragging issues with XWayland
  windowrulev2 = nofocus,class:^$,title:^$,xwayland:1,floating:1,fullscreen:0,pinned:0
#+end_src

** hyprpaper
#+begin_src conf :tangle ~/.config/hypr/hyprpaper.conf
  preload = /home/tendou/Pictures/wallpaper/omake_kabe.jpg
  wallpaper = , /home/tendou/Pictures/wallpaper/omake_kabe.jpg
#+end_src
