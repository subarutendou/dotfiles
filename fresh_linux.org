#+title Emacs settings
#+PROPERTY: header-args:emacs-lisp :tangle ~/.emacs.d/init.el :mkdirp yes

* pre-load
** Minimum
#+begin_src emacs-lisp :tangle ~/.emacs.d/early-init.el
  (setq inhibit-startup-message t
	inhibit-startup-echo-area-message t)
  (scroll-bar-mode -1)
  (tool-bar-mode -1)
  (tooltip-mode -1)
  (menu-bar-mode -1)
  (set-fringe-mode 10)
  (setq visible-bell t)
  (setq use-dialog-box nil)
  (setq initial-sratch-message nil)
  (save-place-mode 1)
  (show-paren-mode 1)
  (setq-default x-select-enable-primary t)
  (setq-default frame-resize-pixelwise t)
  (add-hook 'emacs-startup-hook 'toggle-frame-maximized)
  (set-language-environment "UTF-8")
  (set-default-coding-systems 'utf-8)
  (fset 'yes-or-no-p 'y-or-n-p)
  (setq native-comp-async-report-warnings-errors nil)
  (column-number-mode 1)
  (when (version<= "26.0.50" emacs-version)
    (global-display-line-numbers-mode))
  (defvar file-name-handler-alist-old file-name-handler-alist)
  (setq file-name-handler-alist nil
	gc-cons-threshold most-positive-fixnum)
  (add-hook 'after-init-hook
	    (lambda ()
	      (setq file-name-handler-alist file-name-handler-alist-old)
	      (setq gc-cons-threashold (* 2 1000 1000)))
	    t)
  (dolist (mode ' (org-mode-hook
		   term-mode-hook
		   shell-mode-hook
		   eshell-mode-hook
		   vterm-mode-hook))
    (add-hook mode (lambda () (display-line-numbers-mode 0))))
  (setq browse-url-browser-function 'browse-url-default-windows-browser)
  (setq ido-enable-flex-matching t)
  (setq ido-everywhere t)
  (ido-mode 1)
  (setq ido-use-filename-at-point 'guess)
  (when (fboundp 'electric-pair-mode)
    (electric-pair-mode t))
  (set-face-attribute 'default nil :family "MonoLisa" :height 137)
  (require 'recentf)
  (recentf-mode t)
  (setq recentf-max-saved-items 50)

  (require 'savehist)
  (setq savehist-save-minibuffer-history t)
  (add-hook 'after-init-hook #'savehist-mode)
  (setq vc-make-backup-files t)
  (setq
   backup-by-copying t
   backup-directory-alist
   '(("." . ".saves"))
   delete-old-versions t
   kept-new-versions 6
   kept-old-versions 2
   version-control t)
#+end_src

* basic
** use-package
#+begin_src emacs-lisp
  (require 'package)
  (add-to-list 'package-archives
	       '("melpa-stable" . "https://stable.melpa.org/packages/"))
  (package-initialize)
  (unless package-archive-contents
    (package-refresh-contents))
  (unless (package-installed-p 'use-package)
    (package-install 'use-package))
  (require 'use-package)
  (setq use-package-always-ensure t)
#+end_src
** package
*** melpa emacs
#+begin_src emacs-lisp
  (use-package gruvbox-theme
    :config
    (load-theme 'gruvbox t))
  (use-package diminish)
  (use-package flx)
  (use-package lua-mode)
  (use-package python-mode)
  (use-package rust-mode)
  (use-package zig-mode)
  (use-package json-mode)
  (use-package auto-complete
	       :diminish auto-complete-mode
	       :config
	       (ac-config-default))
  (use-package rainbow-delimiters
	       :hook (prog-mode . rainbow-delimiters-mode))
  (use-package counsel)
  (use-package ivy
	       :diminish ivy-mode
	       :init
	       (ivy-mode 1)
	       :config
	       (setq ivy-use-selectable-prompt t))
  (setq ivy-re-builders-alist
	'((ivy-switch-buffer . ivy--regex-plus)
	  (t . ivy--regex-fuzzy)))
  (setq ivy-initial-inputs-alist nil)
  (use-package ivy-rich
	       :init
	       (ivy-rich-mode 1))
  (setq ivy-use-virtual-buffers t)
  (use-package which-key
	       :diminish which-key
	       :defer 0
	       :diminish which-key-mode
	       :config
	       (which-key-mode)
	       (setq which-key-idle-delay 1))
  (use-package magit
	       :custom
	       (magit-display-buffer-function #'magit-display-buffer-same-window-except-diff-vl))
#+end_src


*** manual installed
#+begin_src emacs-lisp
  (use-package ligature
    :load-path "~/.emacs.d/github/ligature.el"
    :config
    (ligature-set-ligatures 'prog-mode '("-->" "->" "->>" "-<" "--<"
					 "-~" "]#" ".-" "!=" "!=="
					 "#(" "#{" "#[" "#_" "#_("
					 "/=" "/==" "|||" "||" ;; "|"
					 "==" "===" "==>" "=>" "=>>"
					 "=<<" "=/" ">-" ">->" ">="
					 ">=>" "<-" "<--" "<->" "<-<"
					 "<!--" "<|" "<||" "<|||"
					 "<|>" "<=" "<==" "<==>" "<=>"
					 "<=<" "<<-" "<<=" "<~" "<~>"
					 "<~~" "~-" "~@" "~=" "~>"
					 "~~" "~~>" ".=" "..=" "---"
					 "{|" "[|" ".."  "..."  "..<"
					 ".?"  "::" ":::" "::=" ":="
					 ":>" ":<" ";;" "!!"  "!!."
					 "!!!"  "?."  "?:" "??"  "?="
					 "**" "***" "*>" "*/" "#:"
					 "#!"  "#?"  "##" "###" "####"
					 "#=" "/*" "/>" "//" "///"
					 "&&" "|}" "|]" "$>" "++"
					 "+++" "+>" "=:=" "=!=" ">:"
					 ">>" ">>>" "<:" "<*" "<*>"
					 "<$" "<$>" "<+" "<+>" "<>"
					 "<<" "<<<" "</" "</>" "^="
					 "%%" "'''" "\"\"\"" ))
    ;; Enables ligature checks globally in all buffers. You can also do it
    ;; per mode with `ligature-mode'.
    (global-ligature-mode t))
#+end_src
** settings
#+begin_src emacs-lisp
  (blink-cursor-mode 0)
  (add-to-list 'load-path "/home/tendou/.opam/4.14.0/share/emacs/site-lisp")
  (require 'ocp-indent)
#+end_src
** auto tangle
#+begin_src emacs-lisp
  (defun efs/org-babel-tangle-config()
    (when (string-equal (buffer-file-name)
                        (expand-file-name "~/dotfiles/arch_acer.org"))
      (let ((org-confirm-babel-evaluate nil))
        (org-babel-tangle))))

  (add-hook 'org-mode-hook (lambda () (add-hook 'after-save-hook #'efs/org-babel-tangle-config)))
#+end_src
* application
#+begin_src emacs-lisp
  (use-package magit
    :custom
    (magit-display-buffer-function #'magit-display-buffer-same-window-except-diff-v1))
#+end_src

** ERC
#+begin_src emacs-lisp
  (setq erc-server "irc.libera.chat"
        erc-nick "subaru"
        erc-user-full-name "subaru tendou"
        erc-track-shorten-start 8
        erc-autojoin-channels-alist '(("irc.libera.chat" "#systemcrafters" "#emacs"))
        erc-kill-buffer-on-part t
        erc-auto-query 'bury)
#+end_src

* system configuration
** xinitrc
#+begin_src conf :tangle ~/.xinitrc
  #!/bin/bash

  export _JAVA_AWT_WM_NONREPARENTING=1

         # # Cursor and mouse behavier
  xset r rate 300 50 &
  xset s off &
  xset -dpms &
  unclutter &
  udiskie &
  picom -CGb --vsync --backend glx &
  pcloud -b &
  nitrogen --restore &
  export GTK_IM_MODULE=fcitx
  export QT_IM_MODULE=fcitx
  export XMODIFIERS=fcitx
  export DefaultIMModule=fcitx
  fcitx5 &
  # eval `dbus-launch --sh-syntax --exit-with-session`
  # exe --no-startup-id fcitx5 -d
  emacs &
  1password &
  # st&

  # exec dbus-launch --exit-with-session emacs -mm --debug-init
  exec dwm
#+end_src

** bash
#+begin_src conf :tangle ~/.bashrc
  export EDITOR=VISUAL
  export VISUAL="emacs"

  function parse_git_dirty {
      STATUS="$(git status 2> /dev/null)"
      if [[ $? -ne 0 ]]; then printf ""; return; else printf " ["; fi
      if echo ${STATUS} | grep -c "renamed:"         &> /dev/null; then printf " >"; else printf ""; fi
      if echo ${STATUS} | grep -c "brach is ahead:"         &> /dev/null; then printf " !"; else printf ""; fi
      if echo ${STATUS} | grep -c "new file:"         &> /dev/null; then printf " +"; else printf ""; fi
      if echo ${STATUS} | grep -c "Untracked fiels:"         &> /dev/null; then printf " ?"; else printf ""; fi
      if echo ${STATUS} | grep -c "modified:"         &> /dev/null; then printf " *"; else printf ""; fi
      if echo ${STATUS} | grep -c "deleted:"         &> /dev/null; then printf " -"; else printf ""; fi
      printf " ]"
  }

  parse_git_brach() {
      git rev-parse --abbrev-ref HEAD 2> /dev/null
  }

  PS1="\$(parse_git_brach)\$(parse_git_dirty) \w > "

  #update
  alias update='sudo pacman -Syu'
  alias aur='sudo pacman -Sau'

  # Alias
  alias ls='ls -CF --color=auto'
  alias la='ls -A'
  alias ll='ls -alF'
  alias suspend='sudo systemctl suspend'
  alias gs='git status'
  alias grep='grep --color=auto'
  alias rm='rm -i'
  alias mv='mv -i'
  alias tmux='tmux -u'
  # alias ll='ls -lah'
  # alias la='ls -a'
  alias gpgl='gpg --list-secret-keys --keyid-format LONG'
  alias cl='sudo pacman -Rns $(pacman -Qdtq)'
  alias cpu='sudo auto-cpufreq --stats'
  alias te='tar -xvzf'
  alias install_grub='sudo grub-install --target=x86_64-efi --efi-directory=uefi --bootloader-id=grub'
  alias vim='nvim'

  co() {
  gcc "$1" -o ../Debug/"$2"
  }

  dlweb() {
  wget --recursive --no-clobber --page-requisites --html-extension --convert-links --domains "$1" --no-parent "$2"	 
  }
#+end_src

** bash_profile
#+begin_src conf :tangle ~/.bash_profile
  #
  # ~/.bash_profile
  #

  [[ -f ~/.bashrc ]] && . ~/.bashrc

  PATH=$PATH:~/.local/bin

  # Text color variables
  txtund=$(tput sgr 0 1)          # Underline
  txtbld=$(tput bold)             # Bold
  bldred=${txtbld}$(tput setaf 1) #  red
  bldblu=${txtbld}$(tput setaf 4) #  blue
  bldwht=${txtbld}$(tput setaf 7) #  white
  txtrst=$(tput sgr0)             # Reset
  info=${bldwht}*${txtrst}        # Feedback
  pass=${bldblu}*${txtrst}
  warn=${bldred}*${txtrst}
  ques=${bldblu}?${txtrst}

  if [ -z "${DISPLAY}" ] && [ "${XDG_VTNR}" -eq 1 ]; then
     exec startx
  fi

  # opam configuration
  test -r /home/tendou/.opam/opam-init/init.sh && . /home/tendou/.opam/opam-init/init.sh > /dev/null 2> /dev/null || true

  eval $(opam env --switch=4.14.0)
#+end_src

** alacritty
#+begin_src yaml :tangle ~/.config/alacritty/alacritty.yml
  env:
    WINIT_X11_SCALE_FACTOR: "1"
    TERM: xterm-256color

    # Theme configuration
    # Copyright (c) 2016-present Sven Greb
    # <development@svengreb.de>
    # This source code is licensed under the MIT license found in the license file.

  # Colors (Gruvbox Material Dark Medium)
  colors:
    primary:
      background: '0x282828'
      foreground: '0xdfbf8e'

    normal:
      black:   '0x665c54'
      red:     '0xea6962'
      green:   '0xa9b665'
      yellow:  '0xe78a4e'
      blue:    '0x7daea3'
      magenta: '0xd3869b'
      cyan:    '0x89b482'
      white:   '0xdfbf8e'

    bright:
      black:   '0x928374'
      red:     '0xea6962'
      green:   '0xa9b665'
      yellow:  '0xe3a84e'
      blue:    '0x7daea3'
      magenta: '0xd3869b'
      cyan:    '0x89b482'
      white:   '0xdfbf8e'

  # Font configuration
  font:
    normal:
      family: MonoLisa
      style: Regular

    # Point size
    size: 14.0

#+end_src

